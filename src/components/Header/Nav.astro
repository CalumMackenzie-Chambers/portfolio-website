---
import ThemeToggle from "./ThemeToggle.astro";
import Logo from "./Logo.astro";
import Container from "../Container.astro";
import Hamburger from "./Hamburger.astro";
import MenuItems from "./MenuItems.astro";
import Socials from "./Socials.astro";
---

<header class="sticky top-0 z-50 bg-transparent bg-opacity-5 shadow-lg backdrop-blur">
  <Container class="flex flex-col items-center justify-between py-5 lg:grid lg:grid-cols-3">
    <div class="flex w-full items-center justify-between lg:w-auto" style="flex: 1 1 auto;">
      <Logo />
      <Hamburger />
    </div>
    <MenuItems />
    <div class="hidden items-center justify-end lg:flex lg:w-auto" style="flex: 1 1 auto;">
      <Socials />
      <ThemeToggle idModifier="lg" />
    </div>
  </Container>
</header>

<script lang="js">
  document.addEventListener("DOMContentLoaded", function () {
    // Elements and constants
    const body = document.querySelector("body");
    const menuButton = document.getElementById("hamburger-menu");
    const menu = document.querySelector("nav");

    // Function to close the menu
    const closeMenu = () => {
      body.classList.remove("overflow-hidden");
      menu.classList.remove("menu-open");
      menu.classList.add("menu-closed");
    };

    // Function to reset the hamburger icon
    const resetHamburgerIcon = () => {
      const bar1 = document.getElementById("bar1");
      const bar2 = document.getElementById("bar2");
      const bar3 = document.getElementById("bar3");

      bar1.classList.remove("transform", "-rotate-45", "top-1/2");
      bar2.classList.remove("opacity-0");
      bar3.classList.remove("transform", "rotate-45", "top-1/2");
      bar3.classList.add("top-6");
    };

    // Click event listener for the menu button
    menuButton.addEventListener("click", () => {
      body.classList.toggle("overflow-hidden");
      menu.classList.toggle("menu-closed");
      menu.classList.toggle("menu-open");

      if (menu.classList.contains("menu-open")) {
        const menuItems = document.querySelectorAll(".menu-item");
        menuItems.forEach((item, index) => {
          setTimeout(() => {
            item.style.transitionDelay = `${index * 50}ms`;
          }, 0);
        });
      } else {
        const menuItems = document.querySelectorAll(".menu-item");
        menuItems.forEach((item) => {
          item.style.transitionDelay = "";
        });
      }
    });

    // Click event listener for nav links
    document.querySelectorAll(".nav-link").forEach((navLink) => {
      navLink.addEventListener("click", () => {
        closeMenu();
        resetHamburgerIcon();
      });
    });

    // Resize event listener to close menu and reset hamburger icon on breakpoint
    window.addEventListener("resize", () => {
      const screenWidth = window.innerWidth;
      if (screenWidth < 1024) {
        closeMenu();
        resetHamburgerIcon();
      }
    });
  });

  // Dark mode toggle logic
  const toggleLg = document.querySelector("#darkmode-toggle-lg");
  const toggleMobile = document.querySelector("#darkmode-toggle-mobile");
  const htmlElement = document.documentElement;

  // Function to set the theme
  const setTheme = (theme) => {
    if (theme === "dark") {
      htmlElement.classList.add("dark");
      localStorage.setItem("theme", "dark");
    } else {
      htmlElement.classList.remove("dark");
      localStorage.setItem("theme", "light");
    }
  };

  // Load saved theme from local storage
  const savedTheme = localStorage.getItem("theme");
  if (savedTheme) {
    setTheme(savedTheme);
    toggleLg.checked = savedTheme === "dark";
    toggleMobile.checked = savedTheme === "dark";
  } else {
    setTheme("light");
  }

  // Event listeners for theme toggle changes
  const handleToggleChangeMobile = () => {
    if (toggleMobile.checked) {
      setTheme("dark");
      toggleLg.checked = true;
    } else {
      setTheme("light");
      toggleLg.checked = false;
    }
  };

  const handleToggleChangeLg = () => {
    if (toggleLg.checked) {
      setTheme("dark");
      toggleMobile.checked = true;
    } else {
      setTheme("light");
      toggleMobile.checked = false;
    }
  };

  toggleMobile.addEventListener("change", handleToggleChangeMobile);
  toggleLg.addEventListener("change", handleToggleChangeLg);
</script>
